version: "3.3"

services:

  api:
    image: api_eyewash:latest

    # If fails, then restart
    restart: always

    #Command to run when container starts
    command: [ "uvicorn", "app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8002" ]

    working_dir: /appl/

    # Map volume to a specific directory for persistence of data in mongodb
    volumes:
      - ./app:/appl/app
      - ./clean_dirty_cars_classifier:/appl/clean_dirty_cars_classifier
      - ./detect_cars:/appl/detect_cars
      - ./car_model_classifier:/appl/car_model_classifier
      - ./shared:/appl/shared

    expose:
      - 8002

    ports:
      - "8002:8002"

  # Define the mongodb service container
  mongodb:
    # Build from mongo image
    image: mongo:4.0.11

    command: --smallfiles --auth --logappend --logpath 'data/db/logs/mongodb_logs.log'
    restart: always
  
    # Pass environment variables to the mongodb container
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGODB_DATABASE: admin

    deploy:
      placement:
        constraints: [ node.role == manager ]

    # Exports ports to host machine
    ports:
      - "27017:27017"
    # Map volume to a specific directory for persistence of data in mongodb
    volumes:
      - ./mongodb/database/data:/data/db

  dashboard:
    image: eyewash_dashboard:latest

    # If fails, then restart
    restart: always

    #Command to run when container starts
    working_dir: /appl/dashboard/
    command: "streamlit run main.py --server.port 8504"

    volumes:
      - ./dashboard:/appl/dashboard
      - ./shared:/appl/shared

    expose:
      - 8504

    ports:
      - "8504:8504"
